{"version":3,"file":"lib.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport {\n  Conversation,\n  Mode,\n  SessionConfig,\n  Callbacks,\n  Options,\n  Status,\n  ClientToolsConfig,\n  InputConfig,\n} from \"@11labs/client\";\n\nexport type {\n  Role,\n  Mode,\n  Status,\n  SessionConfig,\n  DisconnectionDetails,\n  Language,\n} from \"@11labs/client\";\nexport { postOverallFeedback } from \"@11labs/client\";\n\nexport type HookOptions = Partial<\n  SessionConfig & HookCallbacks & ClientToolsConfig & InputConfig\n>;\nexport type ControlledState = {\n  micMuted?: boolean;\n  volume?: number;\n};\nexport type HookCallbacks = Pick<\n  Callbacks,\n  | \"onConnect\"\n  | \"onDisconnect\"\n  | \"onError\"\n  | \"onMessage\"\n  | \"onAudio\"\n  | \"onDebug\"\n  | \"onUnhandledClientToolCall\"\n>;\n\nexport function useConversation<T extends HookOptions & ControlledState>(\n  props: T = {} as T\n) {\n  const { micMuted, volume, ...defaultOptions } = props;\n  const conversationRef = useRef<Conversation | null>(null);\n  const lockRef = useRef<Promise<Conversation> | null>(null);\n  const [status, setStatus] = useState<Status>(\"disconnected\");\n  const [canSendFeedback, setCanSendFeedback] = useState(false);\n  const [mode, setMode] = useState<Mode>(\"listening\");\n\n  useEffect(() => {\n    if (micMuted !== undefined) {\n      conversationRef?.current?.setMicMuted(micMuted);\n    }\n  }, [micMuted]);\n\n  useEffect(() => {\n    if (volume !== undefined) {\n      conversationRef?.current?.setVolume({ volume });\n    }\n  }, [volume]);\n\n  useEffect(() => {\n    return () => {\n      conversationRef.current?.endSession();\n    };\n  }, []);\n\n  return {\n    startSession: (async (options?: HookOptions) => {\n      if (conversationRef.current?.isOpen()) {\n        return conversationRef.current.getId();\n      }\n\n      if (lockRef.current) {\n        const conversation = await lockRef.current;\n        return conversation.getId();\n      }\n\n      try {\n        lockRef.current = Conversation.startSession({\n          ...(defaultOptions ?? {}),\n          ...(options ?? {}),\n          onModeChange: ({ mode }) => {\n            setMode(mode);\n          },\n          onStatusChange: ({ status }) => {\n            setStatus(status);\n          },\n          onCanSendFeedbackChange: ({ canSendFeedback }) => {\n            setCanSendFeedback(canSendFeedback);\n          },\n        } as Options);\n\n        conversationRef.current = await lockRef.current;\n        // Persist controlled state between sessions\n        if (micMuted !== undefined) {\n          conversationRef.current.setMicMuted(micMuted);\n        }\n        if (volume !== undefined) {\n          conversationRef.current.setVolume({ volume });\n        }\n\n        return conversationRef.current.getId();\n      } finally {\n        lockRef.current = null;\n      }\n    }) as T extends SessionConfig\n      ? (options?: HookOptions) => Promise<string>\n      : (options: SessionConfig & HookOptions) => Promise<string>,\n    endSession: async () => {\n      const conversation = conversationRef.current;\n      conversationRef.current = null;\n      await conversation?.endSession();\n    },\n    setVolume: ({ volume }: { volume: number }) => {\n      conversationRef.current?.setVolume({ volume });\n    },\n    getInputByteFrequencyData: () => {\n      return conversationRef.current?.getInputByteFrequencyData();\n    },\n    getOutputByteFrequencyData: () => {\n      return conversationRef.current?.getOutputByteFrequencyData();\n    },\n    getInputVolume: () => {\n      return conversationRef.current?.getInputVolume() ?? 0;\n    },\n    getOutputVolume: () => {\n      return conversationRef.current?.getOutputVolume() ?? 0;\n    },\n    sendFeedback: (like: boolean) => {\n      conversationRef.current?.sendFeedback(like);\n    },\n    getId: () => {\n      return conversationRef.current?.getId();\n    },\n    sendContextualUpdate: (text: string) => {\n      conversationRef.current?.sendContextualUpdate(text);\n    },\n    sendUserMessage: (text: string) => {\n      conversationRef.current?.sendUserMessage(text);\n    },\n    sendUserActivity: () => {\n      conversationRef.current?.sendUserActivity();\n    },\n    status,\n    canSendFeedback,\n    micMuted,\n    isSpeaking: mode === \"speaking\",\n  };\n}\n\n// const con = useConversation({agentId: \"\"})\n"],"names":["props","micMuted","volume","defaultOptions","_objectWithoutPropertiesLoose","_excluded","conversationRef","useRef","lockRef","_useState","useState","status","setStatus","_useState2","canSendFeedback","setCanSendFeedback","_useState3","mode","setMode","useEffect","_conversationRef$curr","undefined","current","setMicMuted","_conversationRef$curr2","setVolume","_conversationRef$curr3","endSession","startSession","options","_conversationRef$curr4","_exit","_temp2","_result","Conversation","_extends","onModeChange","_ref","onStatusChange","_ref2","onCanSendFeedbackChange","_ref3","Promise","resolve","then","_lockRef$current","getId","_finallyRethrows","_wasThrown","_result2","isOpen","_temp","conversation","_conversation$getId","e","reject","_ref4","_conversationRef$curr5","getInputByteFrequencyData","_conversationRef$curr6","getOutputByteFrequencyData","_conversationRef$curr7","getInputVolume","_conversationRef$curr8","_conversationRef$curr9","getOutputVolume","_conversationRef$curr10","_conversationRef$curr11","sendFeedback","like","_conversationRef$curr12","_conversationRef$curr13","sendContextualUpdate","text","_conversationRef$curr14","sendUserMessage","_conversationRef$curr15","sendUserActivity","_conversationRef$curr16","isSpeaking"],"mappings":"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"}